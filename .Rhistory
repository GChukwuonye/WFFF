community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- datawizard::data_to_wide(
community,
id_cols = NULL,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
length(community_short$MATRIX)
length(community_short$ANALYTE)
length(community_short$corrected)
length(community_short$MRA_LAB_ID)
community_wide<- pivot_wider(
community,
id_cols = NULL,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
community_wide<- pivot_wider(
community,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
community_wide<- pivot_wider(
community,
values_from = "corrected",
names_from = "ANALYTE")
View(community_wide)
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
#community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- pivot_wider(
community,
values_from = "corrected",
names_from = "ANALYTE")
View(community_wide)
community_wide<- pivot_wider(
community,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
View(community_wide)
community_wide<- pivot_wider(
community_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
View(community_wide)
write_csv(community_wide, "pah_fullcommunity.csv")
write_csv(community_wide, "pah_commfull.csv")
pah <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
head(pah)
pah<- pah<- pah[pah$TYPE != "nonresidential", ]
pah$RESULT<- as.numeric(pah$RESULT)
pah$detect = ifelse(pah$RESULT>0,"Detect","Non-Detect")
pah$detect<- replace_na(pah$detect, "Non-Detect")
pah$RESULT<- replace_na(pah$RESULT, 0)
pah<- pah[pah$ANALYTE != "1-Methylnaphthalene", ]
pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+Location,
data=pah,
overall=F)
pah$corrected<- replace_na(pah$RESULT)
pah$corrected <- ifelse(pah$corrected <=(0.00000),
formatC(signif(((as.numeric(pah$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((pah$corrected),digits=4), digits=4,format="fg", flag="#"))
pah$corrected<- as.numeric(pah$corrected)
table1(~corrected|ANALYTE+TYPE,
data=pah,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
pah<- pah<- pah[pah$TYPE != "nonresidential", "control", ]
pah<- pah<- pah[pah$TYPE != "nonresidential" + "control", ]
"
"
pah <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
head(pah)
pah<- pah<- pah[pah$TYPE != "nonresidential", ]
pah<- pah<- pah[pah$TYPE != "control", ]
pah$RESULT<- as.numeric(pah$RESULT)
pah$detect = ifelse(pah$RESULT>0,"Detect","Non-Detect")
pah$detect<- replace_na(pah$detect, "Non-Detect")
pah$RESULT<- replace_na(pah$RESULT, 0)
pah<- pah[pah$ANALYTE != "1-Methylnaphthalene", ]
pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+Location,
data=pah,
overall=F)
commsoil <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
head(commsoil)
#community soil only=====
commsoil <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
head(commsoil)
commsoil<- commsoil[commsoil$TYPE != "nonresidential", ]
commsoil<- commsoil[commsoil$TYPE != "control", ]
commsoil$RESULT<- as.numeric(commsoil$RESULT)
commsoil$detect = ifelse(commsoil$RESULT>0,"Detect","Non-Detect")
commsoil$detect<- replace_na(commsoil$detect, "Non-Detect")
commsoil$RESULT<- replace_na(commsoil$RESULT, 0)
commsoil<- commsoil[commsoil$ANALYTE != "1-Methylnaphthalene", ]
commsoil<- commsoil[commsoil$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+Location,
data=commsoil,
overall=F)
View(commsoil)
table1(~ detect|ANALYTE,
data=commsoil,
overall=F)
#community soil only=====
commsoil <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
#community soil only=====
commsoil <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "totalsoil", col_names = TRUE)
head(commsoil)
commsoil<- commsoil[commsoil$TYPE != "nonresidential", ]
commsoil<- commsoil[commsoil$TYPE != "control", ]
commsoil$RESULT<- as.numeric(commsoil$RESULT)
commsoil$detect = ifelse(commsoil$RESULT>0,"Detect","Non-Detect")
commsoil$detect<- replace_na(commsoil$detect, "Non-Detect")
commsoil$RESULT<- replace_na(commsoil$RESULT, 0)
table1(~ detect|ANALYTE,
data=commsoil,
overall=F)
commsoil<- commsoil[commsoil$ANALYTE != "1-Methylnaphthalene", ]
commsoil<- commsoil[commsoil$ANALYTE != "2-Chloronaphthalene", ]
commsoil<- commsoil[commsoil$ANALYTE != "2-Methylnaphthalene", ]
commsoil<- commsoil[commsoil$ANALYTE != "Acenaphthene", ]
commsoil<- commsoil[commsoil$ANALYTE != "Naphthalene", ]
commsoil$corrected<- replace_na(commsoil$RESULT)
commsoil$corrected <- ifelse(commsoil$corrected <=(0.00000),
formatC(signif(((as.numeric(commsoil$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((commsoil$corrected),digits=4), digits=4,format="fg", flag="#"))
commsoil$corrected<- as.numeric(commsoil$corrected)
table1(~corrected|ANALYTE+TYPE,
data=commsoil,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
commsoil_short <-commsoil[c(7:10, 19, 37)]
commsoil_wide<- datawizard::data_to_wide(
pah_short,
id_cols = NULL,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
commsoil_wide<- datawizard::data_to_wide(
comm_short,
id_cols = NULL,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
commsoil_wide<- datawizard::data_to_wide(
commsoil_short,
id_cols = NULL,
values_from = "corrected",
names_from = "ANALYTE",
values_drop_na = TRUE)
commsoil_wide<- pivot_wider(
commsoil_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
View(commsoil_wide)
commsoil_wide<- pivot_wider(
commsoil_short,
values_from = "corrected",
names_from = "ANALYTE")
#community=====
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
#community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- pivot_wider(
community_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
View(commsoil_wide)
View(community_wide)
#community=====
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
#community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- pivot_wider(
community_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
write_csv(community_wide, "pah_fullcommunity.csv")
View(commsoil_wide)
View(commsoil_wide)
View(commsoil_wide)
View(community_wide)
#community=====
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
#community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- pivot_wider(
community_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
#community=====
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
table1(~ detect|ANALYTE,
data=community,
overall=F)
community<- community[community$ANALYTE != "2-Chloronaphthalene", ]
community$corrected<- replace_na(community$RESULT)
community$corrected <- ifelse(community$corrected <=(0.00000),
formatC(signif(((as.numeric(community$DL)/2)),digits=2), digits=2,format="fg", flag="#"),
formatC(signif((community$corrected),digits=4), digits=4,format="fg", flag="#"))
community$corrected<- as.numeric(community$corrected)
table1(~corrected|ANALYTE+MATRIX,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
table1(~corrected|ANALYTE,
data=community,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
community_short <-community[c(7,9, 17, 35)]
community_wide<- pivot_wider(
community_short,
values_from = "corrected",
names_from = "ANALYTE",
values_fn = list)
write_csv(community_wide, "pah_soilcommunity.csv")
#community=====
community <- read_xlsx("Combined_PAH_Data.xlsx", sheet= "community", col_names = TRUE)
head(community)
community$RESULT<- as.numeric(community$RESULT)
community<- community[community$MATRIX != "WIPE", ]
community$detect = ifelse(community$RESULT>0,"Detect","Non-Detect")
community$detect<- replace_na(community$detect, "Non-Detect")
community$RESULT<- replace_na(community$RESULT, 0)
#community<- community[community$ANALYTE != "1-Methylnaphthalene", ]
#pah<- pah[pah$ANALYTE != "2-Chloronaphthalene", ]
table1(~ detect|ANALYTE+MATRIX,
data=community,
overall=F)
#libraries====
library(tidyverse)
library(agricolae)
library(car)
library(readxl)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(lme4)
library(lmerTest)
library(performance)
library(effects)
library(ggeffects)
library(ggpubr)
library(emmeans)
library(multcomp)
library(patchwork)
library(readxl)
library(tidyverse)
library(readr)
library(stringr)
library(reshape2)
library(table1)
library("ggpubr")
library(readxl)
library(tidyverse)
library(ggplot2)
library(readxl)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(lme4)
library(lmerTest)
library(ggeffects)
library(performance)
library(effects)
library(ggpubr)
library(emmeans)
library(multcomp)
library(sparklyr)
library(tensorflow)
library(keras)
library(table1)
library(dplyr)
library(Hmisc)
library(correlation)
library(corrplot)
library(ggcorrplot)
require(MASS)
library(leaps)
library(heplots)
library(car)
library(ggplot2)
library(broom)
#set working directory =====
setwd("/Users/Gift/Library/CloudStorage/Box-Box/R21 Wildfire and Flash Floods - shared all/Results/Turner Lab Results/Combined datasets with MRA lab ID")
# Load the data====
longer <- read_xlsx("pfas_long.xlsx", sheet= "latlong", col_names = TRUE)
long <- pivot_longer(longer, cols = c(6:28), names_to = "Parameter", values_to = "Concentration")
fire <- read_xlsx("pfas_long.xlsx", sheet= "full_pfas+other", col_names = TRUE)
#test of significance====
#PFBS====
hist(longer$`Perfluorobutanesulfonic acid (PFBS)`)
kruskal.test(log(longer$`Perfluorobutanesulfonic acid (PFBS)`), longer$Type)
#PFBA====
hist(log(longer$`Perfluorobutanoic acid (PFBA)`))
kruskal.test(log(longer$`Perfluorobutanoic acid (PFBA)`), longer$Type)
#PFDA====
hist(log(longer$`Perfluorodecanoic acid (PFDA)`))
kruskal.test(log(longer$`Perfluorodecanoic acid (PFDA)`), longer$Type)
ggplot(longer, aes(x = Type, y = log(`Perfluorodecanoic acid (PFDA)`), fill = Type)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
labs(x = "Sample Type",
y = "Log (Perfluorodecanoic acid (PFDA) Concentration (ug/kg))") +
theme_minimal() +
theme(text = element_text(family = "Arial", size = 12),
plot.title = element_text(hjust = 0.5),
axis.title = element_text(face = "bold")) +
scale_fill_manual(values = c("#fc8d62", "#8da0cb"))
dev.print(png, "pfdaplot.png", res=300, height=8, width=8, units="in")
#PFDoA====
hist(log(longer$`Perfluorododecanoic acid (PFDoA)`))
kruskal.test(longer$`Perfluorododecanoic acid (PFDoA)`, longer$Type)
ggplot(longer, aes(x = Type, y = log(`Perfluorodecanoic acid (PFDA)`), fill = Type)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
labs(x = "Sample Type",
y = "Log (Perfluorododecanoic acid (PFDoA) Concentration (ug/kg))") +
theme_minimal() +
theme(text = element_text(family = "Arial", size = 12),
plot.title = element_text(hjust = 0.5),
axis.title = element_text(face = "bold")) +
scale_fill_manual(values = c("#fc8d62", "#8da0cb"))
dev.print(png, "pfdaplot.png", res=300, height=8, width=8, units="in")
#PFHpA====
hist(log(longer$`Perfluoroheptanoic acid (PFHpA)`))
kruskal.test(longer$`Perfluoroheptanoic acid (PFHpA)`, longer$Type)
#PFHxS====
hist(log(longer$`Perfluorohexanesulfonic acid (PFHxS)`))
kruskal.test(longer$`Perfluorohexanesulfonic acid (PFHxS)`, longer$Type)
#PFHxA====
hist(log(longer$`Perfluorohexanoic acid (PFHxA)`))
kruskal.test(longer$`Perfluorohexanoic acid (PFHxA)`, longer$Type)
#PFNA====
hist(log(longer$`Perfluorononanoic acid (PFNA)`))
kruskal.test(longer$`Perfluorononanoic acid (PFNA)`, longer$Type)
#FOSA====
kruskal.test(longer$`Perfluorooctanesulfonamide (FOSA)`, longer$Type)
#PFOS====
hist(log(longer$`Perfluorooctanesulfonic acid (PFOS)`))
kruskal.test(longer$`Perfluorooctanesulfonic acid (PFOS)`, longer$Type)
#PFOA====
hist(log(longer$`Perfluorooctanoic acid (PFOA)`))
kruskal.test(longer$`Perfluorooctanoic acid (PFOA)`, longer$Type)
#PFPeS====
hist(log(longer$`Perfluoropentanesulfonic acid (PFPeS)`))
kruskal.test(longer$`Perfluoropentanesulfonic acid (PFPeS)`, longer$Type)
#PFPuDA====
hist(log(longer$`Perfluoroundecanoic acid (PFUdA)`))
kruskal.test(longer$`Perfluoroundecanoic acid (PFUdA)`, longer$Type)
